plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '24'
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
		vendor.set(JvmVendorSpec.GRAAL_VM)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	implementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}


test {
	maxParallelForks = Runtime.runtime.availableProcessors()
	finalizedBy jacocoTestReport // report is always generated after tests run
}
//tasks.withType(Test) {
//	maxParallelForks = Runtime.runtime.availableProcessors()
//}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}
tasks.named('test') {
	useJUnitPlatform()
}
bootJar{

}